;; battery capacity
(defpoll BATTERY :interval "5s" `cat /sys/class/power_supply/BAT1/capacity`)

;; current song
(defpoll SONG :interval "1s" `now-playing`)

(defpoll UPTIME :interval "1s" `uptime -p | sed 's/up//'`)

(defwidget lock_info []
	(box 	:class "bat_capacity" 
			:orientation "h" 
			:space-evenly "true" 
			:halign "center"
			'Battery: ${BATTERY}%')
)

(defwidget song []
	(box	:class "song" 
			:orientation "h" 
			:space-evenly "false" 
			:halign "center"
			'${SONG}')
)

(defwidget uptime []
	(box	:class "uptime" 
			:orientation "h" 
			:space-evenly "false" 
			:halign "left"
			'Uptime: ${UPTIME}')
)

(defwindow uptime
				:monitor 0
	    		:geometry 
					(geometry 	:x "1%"
								:y "3%" 
								:width 3 
								:height 3
								:anchor "center top"
							)
				:stacking "bg" 
				:focusable "false"
				:screen 1
           		(uptime))

(defwindow battery
				:monitor 0
	    		:geometry 
					(geometry 	;x "420"
								:y "-9%" 
								:width 3 
								:height 3
								:anchor "center bottom"
							)
				:stacking "bg" 
				:focusable "false"
				:screen 1
           		(lock_info))

(defwindow song
				:monitor 0
	    		:geometry 
					(geometry	;x "3%"
								:y "-5%" 
								:width 3 
								:height 3
								:anchor "center bottom"
							)
				:stacking "bg" 
				:focusable "false"
				:screen 1
           		(song))

