#!/bin/sh

net_connect="$(ip route get 8.8.8.8 | awk 'NR==1 {print $7}')"
[ -z "${net_connect}" ] && internet='NO'

prompt='dmenu -i -h 30 -y 5 -p'
promptl='dmenu -i -h 30 -y 5 -l 12 -p'
cloud_dirs="${HOME}/Cloud Storage"

notify () {
  # $1 : Heading
  # $2 : Message
  # $3 : Image, if any

  notify-send -r 261330 -t 3000 -i "${3}" "${1}" "<span>${2}</span>" 2>/dev/null
}

rclone_mount () {
  [ "${internet}" == 'NO' ] && \
    notify "" "No internet connection." && exit
  
  rclone_remote="$( rclone listremotes | ${prompt} "Choose remote drive: ")"
  [ -z "${rclone_remote}" ] && exit

  mount_point="$(mount | grep "${rclone_remote}" | awk -F 'type' '{print $1}' | awk -F 'on ' '{print $NF}' )"
  [ ! -z "$( mount | grep "${rclone_remote}" )" ] && \
    notify "" "Remote location already mounted at ${mount_point}" && exit
  
  mount_point="$( find "${cloud_dirs}" -maxdepth 1 -mindepth 1 -type d | ${promptl} "Choose mount point")"
  [ -z "${mount_point}" ] && exit
  [ ! -e "${mount_point}" ] && mkdir -p -- "${cloud_dirs}/${mount_point}"
  [ ! -z "$(mount | grep "${mount_point}")" ] && \
    notify "" "Chosen directory is a mounted directory!" && exit
  
  rclone mount "${rclone_remote}" "${mount_point}" &
  notify "" "Rclone remote storage mounted successfully"
}

rclone_unmount () {
  mount_point="$( find "${cloud_dirs}" -maxdepth 1 -mindepth 1 -type d | ${promptl} "Choose mount point")"
  [ -z "${mount_point}" ] && exit
  [ -z "$(mount | grep "${mount_point}")" ] && \
    echo EMPTY && \
    notify "" "Nothing mounted at \n${mount_point}" && exit
  fusermount -uz "${mount_point}" &
  notify "" "Rclone remote storage unmounted successfully"
}


op="$(echo -e "Mount\nUnmount" | ${prompt} "What do you want to do?" )"

[ -z ${op} ] && exit

mount_type="$(cat <<- EOF | ${prompt} ""
rclone
partition
usb
EOF
)"

case "${mount_type}" in
  rclone) 
    [ "${op}" == 'Mount' ] && rclone_mount && exit;
    [ "${op}" == 'Unmount' ] && rclone_unmount && exit; 
    ;;
  *)      
    exit ;;
esac
